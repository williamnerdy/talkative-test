// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Header /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Container>
        <Row
          reverse={false}
        >
          <Col
            size={6}
          >
            <Title
              color="white"
              style={
                Object {
                  "fontSize": "36px",
                }
              }
            >
              Sua voz será ouvida e recompensada
            </Title>
          </Col>
        </Row>
      </Container>,
      "className": "header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Row
          reverse={false}
        >
          <Col
            size={6}
          >
            <Title
              color="white"
              style={
                Object {
                  "fontSize": "36px",
                }
              }
            >
              Sua voz será ouvida e recompensada
            </Title>
          </Col>
        </Row>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Col
            size={6}
          >
            <Title
              color="white"
              style={
                Object {
                  "fontSize": "36px",
                }
              }
            >
              Sua voz será ouvida e recompensada
            </Title>
          </Col>,
          "reverse": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Title
              color="white"
              style={
                Object {
                  "fontSize": "36px",
                }
              }
            >
              Sua voz será ouvida e recompensada
            </Title>,
            "size": 6,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Sua voz será ouvida e recompensada",
              "color": "white",
              "style": Object {
                "fontSize": "36px",
              },
            },
            "ref": null,
            "rendered": "Sua voz será ouvida e recompensada",
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Container>
          <Row
            reverse={false}
          >
            <Col
              size={6}
            >
              <Title
                color="white"
                style={
                  Object {
                    "fontSize": "36px",
                  }
                }
              >
                Sua voz será ouvida e recompensada
              </Title>
            </Col>
          </Row>
        </Container>,
        "className": "header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Row
            reverse={false}
          >
            <Col
              size={6}
            >
              <Title
                color="white"
                style={
                  Object {
                    "fontSize": "36px",
                  }
                }
              >
                Sua voz será ouvida e recompensada
              </Title>
            </Col>
          </Row>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Col
              size={6}
            >
              <Title
                color="white"
                style={
                  Object {
                    "fontSize": "36px",
                  }
                }
              >
                Sua voz será ouvida e recompensada
              </Title>
            </Col>,
            "reverse": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Title
                color="white"
                style={
                  Object {
                    "fontSize": "36px",
                  }
                }
              >
                Sua voz será ouvida e recompensada
              </Title>,
              "size": 6,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Sua voz será ouvida e recompensada",
                "color": "white",
                "style": Object {
                  "fontSize": "36px",
                },
              },
              "ref": null,
              "rendered": "Sua voz será ouvida e recompensada",
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
